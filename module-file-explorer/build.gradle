apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'com.alibaba.arouter'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]

    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }
    packagingOptions {
        exclude 'proguard-project.txt'
        exclude 'project.properties'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/DEPENDENCIES'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api project(':component:CommonBase')
    api project(':component:CommonUI')
    api rootProject.ext.timecat["component-SelfRouter"]
    implementation rootProject.ext.timecat["styles"]

    implementation rootProject.ext.dependencies["roundedimageview"]
    implementation rootProject.ext.androidx_lib["appcompat"]
    implementation rootProject.ext.androidx_lib["recyclerview"]

    implementation 'com.yqritc:recyclerview-flexibledivider:1.2.9'

    kapt rootProject.ext.dependencies["arouter-compiler"]
}
repositories {
    mavenCentral()
}


//////// 打包发布配置开始 ////////
apply plugin: 'maven'
ext {
    // 从Github上clone下来的项目的本地地址
    GITHUB_REPO_PATH = "../../TimeCatMaven"       //这里指定的就是刚刚新建项目后clone下来的在本地的路径
    PUBLISH_GROUP_ID = 'com.timecat.module'
    PUBLISH_ARTIFACT_ID = 'module-file-explorer'
    PUBLISH_VERSION = rootProject.ext.module_file_explorer_version
}
uploadArchives {
    repositories.mavenDeployer {
        def deployPath = file(project.GITHUB_REPO_PATH)
        repository(url: "file://${deployPath.absolutePath}")
        pom.project {
            groupId project.PUBLISH_GROUP_ID
            artifactId project.PUBLISH_ARTIFACT_ID
            version project.PUBLISH_VERSION
        }
    }
}
//////// 打包发布配置结束 ////////
